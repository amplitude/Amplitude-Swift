name: Unit Test

on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:
  unit-test:
    name: Unit ${{ matrix.platform }} - Xcode ${{ matrix.xcode }} - OS ${{ matrix.test-destination-os }}
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-14
            platform: iOS
            xcode: 16.1
            device: "iPhone 16"
            test-destination-os: latest

          - runs-on: macos-14
            platform: iOS
            xcode: 16.1
            test-destination-os: 17.2
            device: "iPhone 15"
          
          - runs-on: macos-14
            platform: macOS
            xcode: 16.1
            test-destination-os: latest

          - runs-on: macos-14
            platform: tvOS
            xcode: 16.1
            test-destination-os: latest
            device: "Apple TV 4K (3rd generation)"

          - runs-on: macos-14
            platform: watchOS
            xcode: 16.1
            test-destination-os: latest
            device: "Apple Watch Series 10 (46mm)"

          - runs-on: macos-14
            platform: visionOS
            xcode: 16.1
            test-destination-os: latest
            device: "Apple Vision Pro"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Xcode ${{ matrix.xcode }}
        run: |
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - name: List Simulators
        run: |
          xcrun simctl list
      - name: List Project Configuration
        run: |
          xcodebuild -list
      - name: ${{ matrix.platform }} Tests
        run: |
          case "${{ matrix.platform }}" in
            iOS)
              xcodebuild test \
                -scheme Amplitude-Swift-Package \
                -sdk iphonesimulator \
                -destination 'platform=iOS Simulator,OS=${{ matrix.test-destination-os }},name=${{ matrix.device }}'
              ;;
            macOS)
              xcodebuild test \
                -scheme Amplitude-Swift-Package \
                -sdk macosx \
                -destination 'platform=macOS'
              ;;
            tvOS)
              xcodebuild \
                -scheme Amplitude-Swift-Package \
                -sdk appletvsimulator \
                -destination 'platform=tvOS Simulator,OS=${{ matrix.test-destination-os }},name=${{ matrix.device }}' \
                test
              ;;
            watchOS)
              xcodebuild \
                -scheme Amplitude-Swift-Package \
                -sdk watchsimulator \
                -destination 'platform=watchOS Simulator,OS=${{ matrix.test-destination-os }},name=${{ matrix.device }}' \
                test
              ;;
            visionOS)
              xcodebuild \
                -scheme Amplitude-Swift-Package \
                -sdk xrsimulator \
                -destination 'platform=visionOS Simulator,OS=${{ matrix.test-destination-os }},name=${{ matrix.device }}' \
                test
              ;;
          esac
  objc-example-test:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Xcode 15
        run: |
          sudo xcode-select -switch /Applications/Xcode_16.1.app
      - name: Objective-C Example Tests (iOS)
        working-directory: Examples/AmplitudeObjCExample
        run: |
          xcodebuild test \
            -scheme AmplitudeObjCExample \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16'
